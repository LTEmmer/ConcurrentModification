# Generated by Django 5.1.7 on 2025-04-11 21:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('acct_id', models.AutoField(primary_key=True, serialize=False)),
                ('acct_type', models.CharField(max_length=32)),
                ('is_active', models.IntegerField()),
                ('balance', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='BankBranches',
            fields=[
                ('bank_id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'bank_branches',
            },
        ),
        migrations.CreateModel(
            name='PersonalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('email', models.CharField(max_length=128, unique=True)),
                ('phone_num', models.CharField(max_length=12, unique=True)),
                ('phone_area', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'personal_details',
            },
        ),
        migrations.CreateModel(
            name='DebitCards',
            fields=[
                ('card_number', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('card_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.accounts')),
            ],
            options={
                'db_table': 'debit_cards',
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('username', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64)),
                ('employee_bank_branch', models.ForeignKey(blank=True, db_column='employee_bank_branch', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.bankbranches')),
            ],
            options={
                'db_table': 'employees',
            },
        ),
        migrations.CreateModel(
            name='Loans',
            fields=[
                ('loan_id', models.AutoField(primary_key=True, serialize=False)),
                ('original_amount', models.FloatField()),
                ('amount_paid', models.FloatField()),
                ('amount_owed', models.FloatField()),
                ('apr', models.FloatField()),
                ('total_interest', models.FloatField()),
                ('paid', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('loan_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.accounts')),
            ],
            options={
                'db_table': 'loans',
            },
        ),
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_street', models.CharField(max_length=128)),
                ('addr_city', models.CharField(max_length=64)),
                ('addr_state', models.CharField(max_length=32)),
                ('addr_zip', models.CharField(max_length=5)),
                ('address_username', models.ForeignKey(blank=True, db_column='address_username', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.personaldetails')),
            ],
            options={
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('trans_id', models.AutoField(primary_key=True, serialize=False)),
                ('trans_type', models.CharField(max_length=64)),
                ('trans_date', models.DateTimeField(blank=True, null=True)),
                ('trans_time', models.DateTimeField(blank=True, null=True)),
                ('trans_note', models.CharField(blank=True, max_length=256, null=True)),
                ('trans_amt', models.FloatField()),
                ('acct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.accounts')),
            ],
            options={
                'db_table': 'transactions',
            },
        ),
        migrations.CreateModel(
            name='Overdrafts',
            fields=[
                ('overdraft_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount_over', models.FloatField()),
                ('penalty_issued', models.IntegerField()),
                ('paid', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('overdraft_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.transactions')),
            ],
            options={
                'db_table': 'overdrafts',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=64, unique=True)),
                ('pwd', models.CharField(max_length=64, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('acct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.accounts')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AddField(
            model_name='personaldetails',
            name='details_username',
            field=models.ForeignKey(blank=True, db_column='details_username', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.users', to_field='username'),
        ),
        migrations.CreateModel(
            name='HelpTickets',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_message', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('ticket_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.users')),
            ],
            options={
                'db_table': 'help_tickets',
            },
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.users')),
            ],
            options={
                'db_table': 'admins',
            },
        ),
        migrations.AddField(
            model_name='accounts',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='concurrent_modification.users'),
        ),
    ]
